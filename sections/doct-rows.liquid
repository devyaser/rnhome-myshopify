

<div class="section-doct-rows">
    <div class="wrapper">
    <h2>{{ section.settings.title }}</h2> 
     <p> {{ section.settings.title1 }}</p>
    
  

         <div class="main-doct-rows">
                {% for block in section.blocks %}
                          <div class="flex">
                     <div class="doct-rows-img main-sx">           
                     <img src="{{ block.settings.image1 | img_url: 'master' }}" >
                      </div>
                             <div class="text-doct-rows">  
                         {{ block.settings.buy-text2 }} 
                           </div> 
                   </div>
             {% endfor %}
           
        
                
                       <div class="images-doc main-sx">           
               <img src="{{ section.settings.image-doc | img_url: 'master' }}" >
               </div>

        
                      
          </div>

  
                 <div class="four-imagess">   
                          <div class="flex">
                     <div class="two-maps scals-images">           
                     <img src="{{ section.settings.imagers | img_url: 'master' }}" >
                      </div>
                                 <div class="two-maps2 scals-images">           
                     <img src="{{ section.settings.imagers1 | img_url: 'master' }}" >
                      </div>
                   </div>
                 </div>



           <div class="four-imagess">   
                          <div class="flex">
                     <div class="two-maps scals-images">           
                     <img src="{{ section.settings.imager4 | img_url: 'master' }}" >
                      </div>
                                 <div class="two-maps2 scals-images">           
                     <img src="{{ section.settings.imagers5 | img_url: 'master' }}" >
                      </div>
                   </div>
                     <div class="text-nxt">   
                   {{ section.settings.buy-text8 }} 
                     </div>
                 </div>
  </div>
 </div>
<script>
   jQuery('.scals-images').on('mousemove', function(e) {
        var $image = jQuery(this).find('img');
        var containerWidth = jQuery(this).width();
        var containerHeight = jQuery(this).height();
        var imageWidth = $image.width();
        var imageHeight = $image.height();
        var offsetX = (e.pageX - jQuery(this).offset().left) / containerWidth;
        var offsetY = (e.pageY - jQuery(this).offset().top) / containerHeight;
        var scale = 1.5; // Adjust scaling factor as needed
        // Calculate scaling factor for X and Y axes based on mouse position
        var scaleX = scale;
        var scaleY = scale;
        // Calculate the transform origin point
        var originX = offsetX * 100 + '%';
        var originY = offsetY * 100 + '%';
        // Apply CSS transformations
        $image.css({
            'transform': 'scale(' + scaleX + ',' + scaleY + ')',
            'transform-origin': originX + ' ' + originY
        });
    });
    jQuery('.scals-images').on('mouseleave', function() {
        var $image = jQuery(this).find('img');
        $image.css({
            'transform': 'scale(1)',
            'transform-origin': '50% 50%' // Reset transform origin
        });
    });
</script>
<script>
   jQuery('.main-sx').on('mousemove', function(e) {
        var $image = jQuery(this).find('img');
        var containerWidth = jQuery(this).width();
        var containerHeight = jQuery(this).height();
        var imageWidth = $image.width();
        var imageHeight = $image.height();
        var offsetX = (e.pageX - jQuery(this).offset().left) / containerWidth;
        var offsetY = (e.pageY - jQuery(this).offset().top) / containerHeight;
        var scale = 1.5; // Adjust scaling factor as needed
        // Calculate scaling factor for X and Y axes based on mouse position
        var scaleX = scale;
        var scaleY = scale;
        // Calculate the transform origin point
        var originX = offsetX * 100 + '%';
        var originY = offsetY * 100 + '%';
        // Apply CSS transformations
        $image.css({
            'transform': 'scale(' + scaleX + ',' + scaleY + ')',
            'transform-origin': originX + ' ' + originY
        });
    });
    jQuery('.main-sx').on('mouseleave', function() {
        var $image = jQuery(this).find('img');
        $image.css({
            'transform': 'scale(1)',
            'transform-origin': '50% 50%' // Reset transform origin
        });
    });
</script>
{% schema %}
  {
    "name": "doct-rows",
    "settings": [
      {
        "type" : "text",
        "id" : "title",
        "label" : "Heading"
      },
       {
        "type" : "text",
        "id" : "title1",
        "label" : "Heading_two"
      },
                  {
            "type" : "image_picker",
            "id" : "image-doc",
            "label" : "Image_img"
          },
             {
            "type" : "image_picker",
            "id" : "imagers",
            "label" : "Images"
          },
             {
            "type" : "image_picker",
            "id" : "imagers1",
            "label" : "Images"
          },

             {
            "type" : "image_picker",
            "id" : "imager4",
            "label" : "Images"
          },
             {
            "type" : "image_picker",
            "id" : "imagers5",
            "label" : "Images"
          },
        {
        "type" : "richtext",
        "id" : "buy-text8",
        "label" : "text"
           }
        
    ],
    "blocks" : [
      {
        "type" : "image_picker",
        "name" : "Images",
        "settings": [
         {
            "type" : "image_picker",
            "id" : "image1",
            "label" : "Image"
          },

           {
        "type" : "richtext",
        "id" : "buy-text2",
        "label" : "text"
           }
         
               
        ]
      }
    ],
    "presets" : [
      {
        "name" : "doct-rows"
      }
    ]
  }
{% endschema %}